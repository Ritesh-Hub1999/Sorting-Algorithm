//element ko uthata hai uski right place mai rakhta hai
  is tarah ki us element kaleft side mai usa chota no. ho
  (or) right 

//partition:
  take a pivot
  count all element less than pivot
  

#include <iostream>
using namespace std;

int partition(int arr[],int s,int e){
  int pivot = arr[s];
  int count = 0;

  for(int i = s+1;i<=e;i++){
    if(arr[i]<pivot){
      count++;
    }
  }
  //pivot at right position
  int pivotIndex =s+count;
  swap(arr[pivotIndex],arr[s]);

  //left and right wala part sambhalna hai

  int i=s;int j=e;

  while(i<pivotIndex && j>pivotIndex){
    while(arr[i]<pivot)
      i++;

    while(arr[j]>pivot)
      j--;

    if(i<pivotIndex && j>pivotIndex){
      swap(arr[i],arr[j]);
      i++;
      j++;
    }
  }
  return pivotIndex;
}

void quickSort(int arr[],int s,int e){
  //base case
  if(s>=e){
    return;
  }

  //partition
  int p = partition(arr,s,e);

  //left side sort
  quickSort(arr,s,p-1);

  //right side
  quickSort(arr,p+1,e);
}
int main(){
  int arr[5] = {3,8,1,4,9};

  quickSort(arr,0,4);

  for(int i=0;i<5;i++){
    cout<<arr[i]<<" ";
  }
}

//element ko uthata hai uski right place mai rakhta hai
  is tarah ki us element kaleft side mai usa chota no. ho
  (or) right 

//partition:
  take a pivot
  count all element less than pivot
  

#include <bits/stdc++.h> 

int pos(vector<int> &arr,int s,int e){
    
    int pivot = arr[s];
    int count = 0;
    for(int i=s+1;i<e;i++){
        if(arr[i] < pivot){
            count++;
        }
    }
    
    int pivotIndex = s+count;
    
    swap(arr[pivotIndex],arr[s]);
    
    int i = s;
    int j = e;
    //left and right value usa chota hona cahiya
    while(i < pivotIndex and pivotIndex > j){
        if(arr[i] > pivot and arr[j] < pivot){
            swap(arr[i],arr[j]);
            i++;
            j--;
        }
        else if(arr[i] < pivot){
            i++;
        }
        else{
            j--;
        }
    }
    return pivotIndex;
}

void quickSortAlgo(vector<int> &arr,int s,int e){
    //base case
    if(s >= e){
        return;
    }
    
    //partition karna hoga so wo index return karenga
    int pos = partition(arr,s,e);
    
    //left call
    quickSort(arr,s,pos-1);
    //right call
    quickSort(arr,pos+1,e);
}
vector<int> quickSort(vector<int> arr)
{
    //step1:
    
    quickSortAlgo(arr,0,arr.size()-1);
    return arr;
}
